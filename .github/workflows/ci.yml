name: ci
on:
   push:
    branches:
      - main
   pull_request:
    branches:
      - main
jobs:
  typecheck:
    if: (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')) && startsWith(github.head_ref, 'renovate') == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"
      - uses: actions/cache@v2
        with:
          path: "~/.npm"
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install
        run: npm ci
      - name: Typecheck
        run: npm run typecheck

  lint:
    if: (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')) && startsWith(github.head_ref, 'renovate') == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"
      - uses: actions/cache@v2
        with:
          path: "~/.npm"
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install
        run: npm ci
      - name: Lint
        run: npm run lint

  tests:
    if: (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')) && startsWith(github.head_ref, 'renovate') == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"
      - uses: actions/cache@v2
        with:
          path: "~/.npm"
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install
        run: npm ci
      - name: Tests
        run: npm test

  storybook:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"
      - uses: actions/cache@v2
        with:
          path: "~/.npm"
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install
        run: npm ci
      - name: Build
        run: npm run storybook-build


  e2e:
    needs: [typecheck, lint, storybook]
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2
       with: 
        path: main
     - uses: actions/setup-node@v2-beta
       with:
        node-version: "14"
     - uses: actions/cache@v2
       with:
        path: "~/.npm"
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
     - name: Install dependencies
       run: npm ci
     - uses: actions/cache@v2
       with:
        path: ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
     - name: Build Frontend
       run: npm run deploy
     - name: Run e2e
       run: npm run e2e

  # e2e:
  #  needs: [typecheck, lint, storybook]
  #  runs-on: ubuntu-latest
  #  steps:
  #   - name: Set up MySQL
  #     uses: mirromutth/mysql-action@v1.1
  #     with:
  #      mysql version: '5.7'         
  #      mysql database: 'spotify_syncronizer'
  #      mysql user: 'user'
  #      mysql password: 'password'
  #   - uses: actions/checkout@v2
  #     with:
  #      repository: gabrielseco/spotify-syncronizer-backend
  #      token: ${{ secrets.PAT_SECRET }}
  #      path: backend
  #   - uses: actions/setup-node@v2-beta
  #     with:
  #      node-version: "14"
  #   - uses: actions/cache@v2
  #     with:
  #      path: "~/.npm"
  #      key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #      restore-keys: |
  #        ${{ runner.os }}-node-
  #   - name: Install
  #     run: npm ci
  #     working-directory: ./backend
  #   - name: Start
  #     run: npm run start:ci
  #     working-directory: ./backend
  #     env:
  #        DB_PORT: 3306
  #        DB_HOST: localhost
  #        DB_USER: user
  #        DB_PASSWORD: password
  #        DB_NAME: spotify_syncronizer
  #        CORS_ORIGIN: ${{ secrets.CYPRESS_CORS_ORIGIN }}
  #        JWT_SECRET: ${{ secrets.CYPRESS_JWT_SECRET }}
  #        CYPRESS_SEED: ${{ secrets.CYPRESS_SEED }}
  #        DB_PROVIDER: db
  #        SPOTIFY_CLIENT_ID: ${{secrets.CYPRESS_SPOTIFY_CLIENT_ID}}
  #        SPOTIFY_SECRET_ID: ${{ secrets.CYPRESS_SPOTIFY_SECRET_ID }}
  #        MUZMO_MIN_DELAY_MILLISECONDS: 1000
  #        MUZMO_MAX_DELAY_MILLISECONDS: 3000
  #        MUZMO_CACHE_TTL_SECONDS: 1
  #   - name: Check server
  #     run: curl http://127.0.0.1:3001/
  #   - uses: actions/checkout@v2
  #     with: 
  #      path: main
  #   - uses: actions/setup-node@v2-beta
  #     with:
  #      node-version: "14"
  #   - uses: actions/cache@v2
  #     with:
  #      path: "~/.npm"
  #      key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #      restore-keys: |
  #        ${{ runner.os }}-node-
  #   - name: Install dependencies
  #     run: npm ci
  #     working-directory: ./main
  #   - uses: actions/cache@v2
  #     with:
  #      path: ${{ github.workspace }}/.next/cache
  #      key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
  #   - name: Build Frontend
  #     run: npm run deploy
  #     working-directory: ./main
  #     env: 
  #      NEXT_PUBLIC_API_ENDPOINT: ${{ secrets.CYPRESS_NEXT_PUBLIC_API_ENDPOINT }}
  #      NEXT_PUBLIC_HOST_URL: ${{ secrets.CYPRESS_NEXT_PUBLIC_HOST_URL }}
  #      NEXT_PUBLIC_SPOTIFY_CLIENT_ID: ${{secrets.CYPRESS_SPOTIFY_CLIENT_ID}}
  #      NEXT_PUBLIC_SPOTIFY_REDIRECT_URI: ${{secrets.CYPRESS_NEXT_PUBLIC_SPOTIFY_REDIRECT_URI}}
  #   - name: Run e2e
  #     run: npm run e2e
  #     working-directory: ./main
    
 
  #build:
  # needs: [e2e]
  # if: github.ref == 'refs/heads/master'
  # runs-on: ubuntu-latest
  # steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions/setup-node@v2-beta
  #     with:
  #       node-version: "14"
  #   - uses: actions/cache@v2
  #     with:
  #       path: "~/.npm"
  #       key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #       restore-keys: |
  #         ${{ runner.os }}-node-
  #   - name: Install
  #     run: npm ci
  #   - name: Build
  #     run: npm run deploy
  #     env: 
  #      NEXT_PUBLIC_API_ENDPOINT: ${{ secrets.NEXT_PUBLIC_API_ENDPOINT_PROD }}
  #      NEXT_PUBLIC_HOST_URL: ${{ secrets.NEXT_PUBLIC_HOST_URL_PROD }}
  #      NEXT_PUBLIC_GITHUB_API: ${{ secrets.NEXT_PUBLIC_GITHUB_API }}
  #      NEXT_PUBLIC_GITHUB_CLIENT_ID: ${{ secrets.PROD_GITHUB_CLIENT }}
  #      NEXT_PUBLIC_FEATURE_TOGGLE_CLIENT_ID: ${{ secrets.FEATURE_TOGGLE_CLIENT_ID }}
  #      NEXT_PUBLIC_FEATURE_TOGGLE_ENVIRONMENT_ID: ${{ secrets.FEATURE_TOGGLE_ENVIRONMENT_ID }}
  #   - uses: netlify/actions/cli@master
  #     with:
  #         args: deploy --dir=out --prod
  #     env:
  #       NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  #       NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}